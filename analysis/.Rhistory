sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(5,10,15,20), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
#sim_power_var_n <- powerCurve(fit.for.power_change_n, test = fixed("distractor"), sim = fit.for.power_change_n, along="subject", breaks=nobs_sim, nsim = nsim)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(20), nsim = 100)
print(sim_power_var_n)
plot(sim_power_var_n)
#sim_power_var_n <- powerCurve(fit.for.power_change_n, test = fixed("distractor"), sim = fit.for.power_change_n, along="subject", breaks=nobs_sim, nsim = nsim)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  third_distr*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(20), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
#df_pilot$expectation=as.numeric(df_pilot$expectation)
#
df_pilot$exp_delay_sq=exp(-(df_pilot$delayS**2))
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+modeled_time_error)*congruency + (1|participant), data = df_pilot)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
VarCorr(fit.for.power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
#df_pilot$expectation=as.numeric(df_pilot$expectation)
#
df_pilot$exp_delay_sq=exp((df_pilot$delayS**2))
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
VarCorr(fit.for.power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
model <- makeLmer(. ~ (delayS+sqr_distr+third_distr+exp_delay_sq)+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.05427, sigma=0.344050, data=df_created_all)# sigma=res,
#df_pilot$expectation=as.numeric(df_pilot$expectation)
df_created_all$exp_delay_sq=exp((df_created_all$delayS**2))
model <- makeLmer(. ~ (delayS+sqr_distr+third_distr+exp_delay_sq)+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.05427, sigma=0.344050, data=df_created_all)# sigma=res,
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
VarCorr(fit.for.power)
model <- makeLmer(. ~ (delayS+sqr_distr+third_distr+exp_delay_sq)+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.05427, sigma=0.344050, data=df_created_all)# sigma=res,
model <- makeLmer(. ~ (delayS + sqr_distr + third_distr + exp_delay_sq) *      congruency, fixef=fixef(fit.for.power)/2, VarCorr=0.05427, sigma=0.344050, data=df_created_all)# sigma=res,
model <- makeLmer(. ~ (delayS + sqr_distr + third_distr + exp_delay_sq) *      congruency, fixef=fixef(fit.for.power)/2, VarCorr=0.05427, sigma=0.344050, data=df_created_all)# sigma=res,
model <- makeLmer(. ~ (delayS + sqr_distr + third_distr + exp_delay_sq) *      congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.05427, sigma=0.344050, data=df_created_all)# sigma=res,
summary(model)
#sim_power_var_n <- powerCurve(fit.for.power_change_n, test = fixed("distractor"), sim = fit.for.power_change_n, along="subject", breaks=nobs_sim, nsim = nsim)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  third_distr*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(20), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
#sim_power_var_n <- powerCurve(fit.for.power_change_n, test = fixed("distractor"), sim = fit.for.power_change_n, along="subject", breaks=nobs_sim, nsim = nsim)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(5,10,15,20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
#sim_power  = powerSim(fit.for.power,test = fixed("distractor"), nsim=nsim)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS  + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
model <- makeLmer(. ~ (delayS + sqr_distr + third_distr + exp_delay_sq) *      congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.05427, sigma=0.344050, data=df_created_all)# sigma=res,
df_created_all$congruency=as.factor(df_created_all$congruency)
df_created_all$exp_delay_sq=exp((df_created_all$delayS**2))
df_created_all$expectation=as.factor(df_created_all$expectation)
model <- makeLmer(. ~ (delayS + sqr_distr + third_distr + exp_delay_sq) *      congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.05427, sigma=0.344050, data=df_created_all)# sigma=res,
#sim_power_var_n <- powerCurve(fit.for.power_change_n, test = fixed("distractor"), sim = fit.for.power_change_n, along="subject", breaks=nobs_sim, nsim = nsim)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
#sim_power_var_n <- powerCurve(fit.for.power_change_n, test = fixed("distractor"), sim = fit.for.power_change_n, along="subject", breaks=nobs_sim, nsim = nsim)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
VarCorr(fit.for.power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
VarCorr(fit.for.power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
data_paths=c(data_omer_80G,data_erva_80)
df_pilot=data.frame()
for (i in data_paths){
tmp=data_cleaner(i)
df_pilot=rbind(df_pilot,tmp)
rm(tmp)
}
df_pilot$expectation=as.factor(df_pilot$expectation)
df_pilot$congruency=as.factor(df_pilot$congruency)
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
#df_pilot$expectation=as.numeric(df_pilot$expectation)
df_pilot$exp_delay_sq=exp((df_pilot$delayS**2))
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
## power analysis along different sample sizes
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
model <- makeLmer(. ~ (delayS + sqr_distr + third_distr + exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.05427, sigma=0.344050, data=df_created_all)# sigma=res,
summary(model)
model <- makeLmer(. ~ (delayS + sqr_distr + third_distr + exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.05427, sigma=0.344050, data=df_created_all)# sigma=res,
model <- makeLmer(. ~ (delayS + sqr_distr + third_distr + exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.05427, sigma=0.344050, data=df_created_all)# sigma=res,
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
print(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
VarCorr(fit.for.power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
model <- makeLmer(. ~ (delayS + sqr_distr  + exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.05427, sigma=0.344050, data=df_created_all)# sigma=res,
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
print(sim_power_var_n)
VarCorr(fit.for.power)
model <- makeLmer(. ~ (delayS + sqr_distr  + exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.095874, sigma=0.348050, data=df_created_all)# sigma=res,
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
data_paths=c(data_omer_80G,data_erva_80,data_nicola_85_1,data_omer_85)
df_pilot=data.frame()
for (i in data_paths){
tmp=data_cleaner(i)
df_pilot=rbind(df_pilot,tmp)
rm(tmp)
}
df_pilot$expectation=as.factor(df_pilot$expectation)
df_pilot$congruency=as.factor(df_pilot$congruency)
#df_pilot$expectation=as.numeric(df_pilot$expectation)
df_pilot$exp_delay_sq=exp((df_pilot$delayS**2))
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power
summary(sim_power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
VarCorr(fit.for.power)
model <- makeLmer(. ~ (delayS + sqr_distr  + exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.054613, sigma=0.348050, data=df_created_all)# sigma=res,
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
#df_pilot$expectation=as.numeric(df_pilot$expectation)
df_pilot$exp_delay_sq=exp(-(df_pilot$delayS**2))
#df_pilot$expectation=as.numeric(df_pilot$expectation)
df_pilot$exp_delay_sq=exp(-(df_pilot$delayS**2))
summary(df_pilot$expectation)
predictors="(delayS+sqr_distr+modeled_time_error)*expectation"
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(20,25), nsim = 5)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(20,25), nsim = 100)
print(sim_power_var_n)
plot(sim_power_var_n)
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
VarCorr(fit.for.power)
#sim_power  = powerSim(fit.for.power,test = fixed("distractor"), nsim=nsim)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS  + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
df_created_all$congruency=as.factor(df_created_all$congruency)
df_created_all$exp_delay_sq=exp((df_created_all$delayS**2))
df_created_all$expectation=as.factor(df_created_all$expectation)
model <- makeLmer(. ~ (delayS + sqr_distr  + exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.054622, sigma=0.345211, data=df_created_all)# sigma=res,
df_created_all$congruency=as.factor(df_created_all$congruency)
df_created_all$exp_delay_sq=exp((df_created_all$delayS**2))
df_created_all$expectation=as.factor(df_created_all$expectation)
model <- makeLmer(. ~ (delayS + sqr_distr  +third_distr+ exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.054622, sigma=0.345211, data=df_created_all)# sigma=res,
summary(model)
#summary(model)
```
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(20,25), nsim = 50)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,25), nsim = 20)
print(sim_power_var_n)
model <- makeLmer(. ~ (delayS + sqr_distr  +third_distr+ exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.054622, sigma=0.345211, data=df_created_all)# sigma=res,
df_created_all$expectation=as.factor(df_created_all$expectation)
df_created_all$congruency=as.factor(df_created_all$congruency)
df_created_all$congruency=as.factor(df_created_all$congruency)
df_created_all$exp_delay_sq=exp((df_created_all$delayS**2))
df_created_all$expectation=as.factor(df_created_all$expectation)
model <- makeLmer(. ~ (delayS + sqr_distr  +third_distr+ exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.054622, sigma=0.345211, data=df_created_all)# sigma=res,
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
VarCorr(fit.for.power)
fixef(fit.for.power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
VarCorr(fit.for.power)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
data_paths=c(data_omer_80G,data_erva_80,data_nicola_85_1)
df_pilot=data.frame()
for (i in data_paths){
tmp=data_cleaner(i)
df_pilot=rbind(df_pilot,tmp)
rm(tmp)
}
df_pilot$expectation=as.factor(df_pilot$expectation)
df_pilot$congruency=as.factor(df_pilot$congruency)
#df_pilot$expectation=as.numeric(df_pilot$expectation)
df_pilot$exp_delay_sq=exp(-(df_pilot$delayS**2))
summary(df_pilot$expectation)
predictors="(delayS+sqr_distr+modeled_time_error)*expectation"
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
VarCorr(fit.for.power)
#sim_power  = powerSim(fit.for.power,test = fixed("distractor"), nsim=nsim)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS  + (1 |participant)), nsim=20)
#sim_power  = powerSim(fit.for.power,test = fixed("distractor"), nsim=nsim)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS  + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
#df_pilot$expectation=as.numeric(df_pilot$expectation)
df_pilot$exp_delay_sq=exp(-(df_pilot$delayS**2))
summary(df_pilot$expectation)
predictors="(delayS+sqr_distr+modeled_time_error)*expectation"
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
VarCorr(fit.for.power)
sim_power
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
VarCorr(fit.for.power)
fixef(fit.for.power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
+third_distr
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
VarCorr(fit.for.power)
df_created_all$congruency=as.factor(df_created_all$congruency)
df_created_all$exp_delay_sq=exp(-(df_created_all$delayS**2))
df_created_all$expectation=as.factor(df_created_all$expectation)
model <- makeLmer(. ~ (delayS + sqr_distr  +third_distr+ exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.054622, sigma=0.345211, data=df_created_all)# sigma=res,
model <- makeLmer(. ~ (delayS + sqr_distr  +third_distr+ exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.067596, sigma=0.345211, data=df_created_all)# sigma=res,
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
data_paths=c(data_omer_80G,data_erva_80)
df_pilot=data.frame()
for (i in data_paths){
tmp=data_cleaner(i)
df_pilot=rbind(df_pilot,tmp)
rm(tmp)
}
df_pilot$expectation=as.factor(df_pilot$expectation)
df_pilot$congruency=as.factor(df_pilot$congruency)
#df_pilot$expectation=as.numeric(df_pilot$expectation)
df_pilot$exp_delay_sq=exp(-(df_pilot$delayS**2))
summary(df_pilot$expectation)
predictors="(delayS+sqr_distr+modeled_time_error)*expectation"
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
VarCorr(fit.for.power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
model <- makeLmer(. ~ (delayS + sqr_distr  +third_distr+ exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.095873, sigma=0.345211, data=df_created_all)# sigma=res,
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
df_created_all$congruency=as.factor(df_created_all$congruency)
df_created_all$exp_delay_sq=exp(-(df_created_all$delayS**2))
df_created_all$expectation=as.factor(df_created_all$expectation)
model <- makeLmer(. ~ (delayS + sqr_distr  +third_distr+ exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.055873, sigma=0.345211, data=df_created_all)# sigma=res,
#summary(model)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
fit.for.power = lmer(pTemporalError ~ (delayS+third_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+third_distr+modeled_time_error)*congruency + (1|participant), data = df_pilot)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
data_paths=c(data_omer_80G,data_erva_80,data_nicola_85_1,data_omer_85)
df_pilot=data.frame()
for (i in data_paths){
tmp=data_cleaner(i)
df_pilot=rbind(df_pilot,tmp)
rm(tmp)
}
data_paths=c(data_omer_80G,data_erva_80)
df_pilot=data.frame()
for (i in data_paths){
tmp=data_cleaner(i)
df_pilot=rbind(df_pilot,tmp)
rm(tmp)
}
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(15,20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
model <- makeLmer(. ~ (delayS + sqr_distr  +third_distr+ exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.055873, sigma=0.185211, data=df_created_all)# sigma=res,
model <- makeLmer(. ~ (delayS + sqr_distr + exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.055873, sigma=0.185211, data=df_created_all)# sigma=res,
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(15,20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
VarCorr(fit.for.power)
model <- makeLmer(. ~ (delayS + sqr_distr + exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power)/2, VarCorr=0.095871, sigma=0.348798, data=df_created_all)# sigma=res,
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(15,20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
df_created_all$congruency=as.factor(df_created_all$congruency)
df_created_all$exp_delay_sq=exp(-(df_created_all$delayS**2))
df_created_all$expectation=as.factor(df_created_all$expectation)
model <- makeLmer(. ~ (delayS + sqr_distr + exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power), VarCorr=0.095871, sigma=0.348798, data=df_created_all)# sigma=res,
#summary(model)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(15,20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(5,10), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
data_paths=c(data_omer_85,data_omer70,data_omer_80G,data_Erva_70,data_erva_80,data_nicola_85_1)
df_pilot=data.frame()
for (i in data_paths){
tmp=data_cleaner(i)
df_pilot=rbind(df_pilot,tmp)
rm(tmp)
}
df_pilot$expectation=as.factor(df_pilot$expectation)
df_pilot$congruency=as.factor(df_pilot$congruency)
#df_pilot$expectation=as.numeric(df_pilot$expectation)
df_pilot$exp_delay_sq=exp(-(df_pilot$delayS**2))
summary(df_pilot$expectation)
predictors="(delayS+sqr_distr+modeled_time_error)*expectation"
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
sim_power  = powerSim(fit.for.power, test = fcompare(. ~  delayS*congruency + (1 |participant)), nsim=20)
sim_power
summary(sim_power)
VarCorr(fit.for.power)
model <- makeLmer(. ~ (delayS + sqr_distr + exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power), VarCorr=0.095871, sigma=0.348798, data=df_created_all)# sigma=res,
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(5,10), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
data_paths=c(data_omer_80G,data_erva_80)
df_pilot=data.frame()
for (i in data_paths){
tmp=data_cleaner(i)
df_pilot=rbind(df_pilot,tmp)
rm(tmp)
}
df_pilot$expectation=as.factor(df_pilot$expectation)
df_pilot$congruency=as.factor(df_pilot$congruency)
#df_pilot$expectation=as.numeric(df_pilot$expectation)
df_pilot$exp_delay_sq=exp(-(df_pilot$delayS**2))
summary(df_pilot$expectation)
predictors="(delayS+sqr_distr+modeled_time_error)*expectation"
fit.for.power = lmer(pTemporalError ~ (delayS+sqr_distr+exp_delay_sq)*congruency + (1|participant), data = df_pilot)
#fit.for.power = glmer(pTemporalError ~ delayS*congruency + (1  |participant), data = df_pilot)
# check object
summary(fit.for.power)
VarCorr(fit.for.power)
fixef(fit.for.power)
VarCorr(fit.for.power)
model <- makeLmer(. ~ (delayS + sqr_distr + exp_delay_sq) * congruency+(1|participant), fixef=fixef(fit.for.power), VarCorr=0.095871, sigma=0.348798, data=df_created_all)# sigma=res,
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20,alpha = .01)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fixed=("delayS"), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20,alpha = .01)
sim_power_var_n <- powerCurve(model, test = fixed("delayS"), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20,alpha = .01)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fixed("congruency"), sim = model, along="participant", breaks=c(8,20), nsim = 20,alpha = .01)
print(sim_power_var_n)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20,alpha = .001)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 20,alpha = .01)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(5,10,15,20), nsim = 100,alpha = .01)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS*congruency  + (1 |participant)), sim = model, along="participant", breaks=c(5,10,15,20), nsim = 100,alpha = .01)
print(sim_power_var_n)
plot(sim_power_var_n)
sim_power_var_n <- powerCurve(model, test = fcompare(. ~  delayS  + (1 |participant)), sim = model, along="participant", breaks=c(8,15,20,25), nsim = 100,alpha = .01)
print(sim_power_var_n)
plot(sim_power_var_n)
print(sim_power_var_n)
plot(sim_power_var_n)
